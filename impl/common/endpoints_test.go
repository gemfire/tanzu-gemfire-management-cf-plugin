/*
 * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
 * agreements. See the NOTICE file distributed with this work for additional information regarding
 * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the License. You may obtain a
 * copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

package common_test

import (
	"code.cloudfoundry.org/cli/cf/errors"
	. "github.com/onsi/ginkgo"
	. "github.com/onsi/gomega"

	"github.com/gemfire/cloudcache-management-cf-plugin/domain"
	. "github.com/gemfire/cloudcache-management-cf-plugin/impl/common"
	"github.com/gemfire/cloudcache-management-cf-plugin/impl/implfakes"
)

var _ = Describe("Endpoints", func() {

	Describe("GetEndPoints", func() {

		var (
			requester    *implfakes.FakeRequestHelper
			commandData  domain.CommandData
			fakeResponse string
		)

		BeforeEach(func() {
			requester = new(implfakes.FakeRequestHelper)
			commandData = domain.CommandData{}
			fakeResponse = `{"swagger":"2.0","info":{"description":"REST API and interface to manage Geode components.","version":"v2","title":"Apache Geode Management REST API","termsOfService":"http://www.apache.org/licenses/","contact":{"name":"the Apache Geode Community","url":"http://geode.apache.org","email":"dev@geode.apache.org"},"license":{"name":"Apache License, version 2.0","url":"http://www.apache.org/licenses/"},"authTokenEnabled":"true"},"host":"localhost:7070","basePath":"/management","tags":[{"name":"gateway-management-controller","description":"Gateway Management Controller"},{"name":"member-management-controller","description":"Member Management Controller"},{"name":"pdx-management-controller","description":"Pdx Management Controller"},{"name":"ping-management-controller","description":"Ping Management Controller"},{"name":"rebalance-operation-controller","description":"Rebalance Operation Controller"},{"name":"region-management-controller","description":"Region Management Controller"}],"paths":{"/experimental/configurations/pdx":{"post":{"tags":["pdx-management-controller"],"summary":"configure pdx","operationId":"configurePdxUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"pdxType","description":"pdxType","required":true,"schema":{"$ref":"#/definitions/Pdx"}}],"responses":{"200":{"description":"OK.","schema":{"$ref":"#/definitions/ClusterManagementResult"}},"201":{"description":"Created"},"401":{"description":"Invalid Username or Password."},"403":{"description":"Insufficient privileges for operation."},"404":{"description":"Not Found"},"409":{"description":"Entity already exists."},"500":{"description":"GemFire throws an error or exception."}},"deprecated":false}},"/experimental/gateways/receivers":{"get":{"tags":["gateway-management-controller"],"summary":"list gateway-receivers","operationId":"listGatewayReceiversUsingGET","produces":["*/*"],"parameters":[{"name":"group","in":"query","description":"group","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClusterManagementListResult«GatewayReceiver,GatewayReceiverInfo»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false},"post":{"tags":["gateway-management-controller"],"summary":"create gateway-receiver","operationId":"createGatewayReceiverUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"gatewayReceiverConfig","description":"gatewayReceiverConfig","required":true,"schema":{"$ref":"#/definitions/GatewayReceiver"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClusterManagementResult"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false}},"/experimental/gateways/receivers/{id}":{"get":{"tags":["gateway-management-controller"],"summary":"get gateway-receiver","operationId":"getGatewayReceiverUsingGET","produces":["*/*"],"parameters":[{"name":"id","in":"path","description":"id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClusterManagementGetResult«GatewayReceiver,GatewayReceiverInfo»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false}},"/experimental/indexes":{"get":{"tags":["region-management-controller"],"summary":"list indexes","operationId":"listAllIndexUsingGET","produces":["*/*"],"parameters":[{"name":"id","in":"query","description":"id","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClusterManagementListResult«Index,RuntimeInfo»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false,"jqFilter":".result[] | .configuration | {name:.name,expression:.expression,regionPath:.regionPath}"}},"/experimental/members":{"get":{"tags":["member-management-controller"],"summary":"list members","operationId":"listMembersUsingGET","produces":["*/*"],"parameters":[{"name":"group","in":"query","description":"group","required":false,"type":"string"},{"name":"id","in":"query","description":"id","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClusterManagementListResult«Member,MemberInformation»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false,"jqFilter":".result[] | .runtimeInfo[] | {name:.memberName,status:.status}"}},"/experimental/members/{id}":{"get":{"tags":["member-management-controller"],"summary":"get member","operationId":"getMemberUsingGET","produces":["*/*"],"parameters":[{"name":"id","in":"path","description":"id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClusterManagementGetResult«Member,MemberInformation»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false,"jqFilter":".result | .runtimeInfo[] | {name:.memberName,status:.status}"}},"/experimental/operations/rebalances":{"get":{"tags":["rebalance-operation-controller"],"summary":"list rebalances","operationId":"listRebalancesUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClusterManagementListOperationsResult«RebalanceResult»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false},"post":{"tags":["rebalance-operation-controller"],"summary":"start rebalance","operationId":"startRebalanceUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"operation","description":"operation","required":true,"schema":{"$ref":"#/definitions/RebalanceOperation"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClusterManagementOperationResult«RebalanceResult»"}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false}},"/experimental/operations/rebalances/{id}":{"get":{"tags":["rebalance-operation-controller"],"summary":"check rebalance","operationId":"checkRebalanceStatusUsingGET","produces":["*/*"],"parameters":[{"name":"id","in":"path","description":"id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClusterManagementOperationStatusResult«RebalanceResult»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false}},"/experimental/ping":{"get":{"tags":["ping-management-controller"],"summary":"ping","operationId":"pingUsingGET","produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false}},"/experimental/regions":{"get":{"tags":["region-management-controller"],"summary":"list regions","operationId":"listRegionUsingGET","produces":["*/*"],"parameters":[{"name":"group","in":"query","description":"group","required":false,"type":"string"},{"name":"id","in":"query","description":"id","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClusterManagementListResult«Region,RuntimeRegionInfo»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false,"jqFilter":".result[] | .runtimeInfo[] + .configuration | {name:.name,type:.type,entryCount:.entryCount}"},"post":{"tags":["region-management-controller"],"summary":"create region","operationId":"createRegionUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"regionConfig","description":"regionConfig","required":true,"schema":{"$ref":"#/definitions/Region"}}],"responses":{"200":{"description":"OK.","schema":{"$ref":"#/definitions/ClusterManagementResult"}},"201":{"description":"Created"},"401":{"description":"Invalid Username or Password."},"403":{"description":"Insufficient privileges for operation."},"404":{"description":"Not Found"},"409":{"description":"Region already exist."},"500":{"description":"GemFire throws an error or exception."}},"deprecated":false}},"/experimental/regions/{id}":{"get":{"tags":["region-management-controller"],"summary":"get region","operationId":"getRegionUsingGET","produces":["*/*"],"parameters":[{"name":"id","in":"path","description":"id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClusterManagementGetResult«Region,RuntimeRegionInfo»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false,"jqFilter":".result | .runtimeInfo[] + .configuration | {name:.name,type:.type,entryCount:.entryCount}"},"delete":{"tags":["region-management-controller"],"summary":"delete region","operationId":"deleteRegionUsingDELETE","produces":["*/*"],"parameters":[{"name":"group","in":"query","description":"group","required":false,"type":"string"},{"name":"id","in":"path","description":"id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClusterManagementResult"}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}},"deprecated":false}},"/experimental/regions/{regionName}/indexes":{"get":{"tags":["region-management-controller"],"summary":"list region indexes","operationId":"listIndexUsingGET","produces":["*/*"],"parameters":[{"name":"id","in":"query","description":"id","required":false,"type":"string"},{"name":"regionName","in":"path","description":"regionName","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClusterManagementListResult«Index,RuntimeInfo»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false,"jqFilter":".result[] | .configuration | {name:.name,expression:.expression}"}},"/experimental/regions/{regionName}/indexes/{id}":{"get":{"tags":["region-management-controller"],"summary":"get index","operationId":"getIndexUsingGET","produces":["*/*"],"parameters":[{"name":"id","in":"path","description":"id","required":true,"type":"string"},{"name":"regionName","in":"path","description":"regionName","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClusterManagementGetResult«Index,RuntimeInfo»"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}},"deprecated":false,"jqFilter":".result | .configuration | {name:.name,expression:.expression}"}}},"definitions":{"CacheServerInfo":{"type":"object","properties":{"bindAddress":{"type":"string"},"maxConnections":{"type":"integer","format":"int32"},"maxThreads":{"type":"integer","format":"int32"},"port":{"type":"integer","format":"int32"},"running":{"type":"boolean"}},"title":"CacheServerInfo"},"ClassName":{"type":"object","properties":{"className":{"type":"string"},"initProperties":{"type":"object","additionalProperties":{"type":"object"}}},"title":"ClassName"},"ClusterManagementGetResult«GatewayReceiver,GatewayReceiverInfo»":{"type":"object","properties":{"result":{"$ref":"#/definitions/ConfigurationResult«GatewayReceiver,GatewayReceiverInfo»"},"statusCode":{"type":"string","enum":["ILLEGAL_ARGUMENT","UNAUTHENTICATED","UNAUTHORIZED","ENTITY_EXISTS","ENTITY_NOT_FOUND","ERROR","FAIL_TO_PERSIST","ACCEPTED","IN_PROGRESS","OK"]},"statusMessage":{"type":"string"},"uri":{"type":"string"}},"title":"ClusterManagementGetResult«GatewayReceiver,GatewayReceiverInfo»"},"ClusterManagementGetResult«Index,RuntimeInfo»":{"type":"object","properties":{"result":{"$ref":"#/definitions/ConfigurationResult«Index,RuntimeInfo»"},"statusCode":{"type":"string","enum":["ILLEGAL_ARGUMENT","UNAUTHENTICATED","UNAUTHORIZED","ENTITY_EXISTS","ENTITY_NOT_FOUND","ERROR","FAIL_TO_PERSIST","ACCEPTED","IN_PROGRESS","OK"]},"statusMessage":{"type":"string"},"uri":{"type":"string"}},"title":"ClusterManagementGetResult«Index,RuntimeInfo»"},"ClusterManagementGetResult«Member,MemberInformation»":{"type":"object","properties":{"result":{"$ref":"#/definitions/ConfigurationResult«Member,MemberInformation»"},"statusCode":{"type":"string","enum":["ILLEGAL_ARGUMENT","UNAUTHENTICATED","UNAUTHORIZED","ENTITY_EXISTS","ENTITY_NOT_FOUND","ERROR","FAIL_TO_PERSIST","ACCEPTED","IN_PROGRESS","OK"]},"statusMessage":{"type":"string"},"uri":{"type":"string"}},"title":"ClusterManagementGetResult«Member,MemberInformation»"},"ClusterManagementGetResult«Region,RuntimeRegionInfo»":{"type":"object","properties":{"result":{"$ref":"#/definitions/ConfigurationResult«Region,RuntimeRegionInfo»"},"statusCode":{"type":"string","enum":["ILLEGAL_ARGUMENT","UNAUTHENTICATED","UNAUTHORIZED","ENTITY_EXISTS","ENTITY_NOT_FOUND","ERROR","FAIL_TO_PERSIST","ACCEPTED","IN_PROGRESS","OK"]},"statusMessage":{"type":"string"},"uri":{"type":"string"}},"title":"ClusterManagementGetResult«Region,RuntimeRegionInfo»"},"ClusterManagementListOperationsResult«RebalanceResult»":{"type":"object","properties":{"result":{"type":"array","items":{"$ref":"#/definitions/ClusterManagementOperationResult«RebalanceResult»"}},"statusCode":{"type":"string","enum":["ILLEGAL_ARGUMENT","UNAUTHENTICATED","UNAUTHORIZED","ENTITY_EXISTS","ENTITY_NOT_FOUND","ERROR","FAIL_TO_PERSIST","ACCEPTED","IN_PROGRESS","OK"]},"statusMessage":{"type":"string"},"uri":{"type":"string"}},"title":"ClusterManagementListOperationsResult«RebalanceResult»"},"ClusterManagementListResult«GatewayReceiver,GatewayReceiverInfo»":{"type":"object","properties":{"result":{"type":"array","items":{"$ref":"#/definitions/ConfigurationResult«GatewayReceiver,GatewayReceiverInfo»"}},"statusCode":{"type":"string","enum":["ILLEGAL_ARGUMENT","UNAUTHENTICATED","UNAUTHORIZED","ENTITY_EXISTS","ENTITY_NOT_FOUND","ERROR","FAIL_TO_PERSIST","ACCEPTED","IN_PROGRESS","OK"]},"statusMessage":{"type":"string"},"uri":{"type":"string"}},"title":"ClusterManagementListResult«GatewayReceiver,GatewayReceiverInfo»"},"ClusterManagementListResult«Index,RuntimeInfo»":{"type":"object","properties":{"result":{"type":"array","items":{"$ref":"#/definitions/ConfigurationResult«Index,RuntimeInfo»"}},"statusCode":{"type":"string","enum":["ILLEGAL_ARGUMENT","UNAUTHENTICATED","UNAUTHORIZED","ENTITY_EXISTS","ENTITY_NOT_FOUND","ERROR","FAIL_TO_PERSIST","ACCEPTED","IN_PROGRESS","OK"]},"statusMessage":{"type":"string"},"uri":{"type":"string"}},"title":"ClusterManagementListResult«Index,RuntimeInfo»"},"ClusterManagementListResult«Member,MemberInformation»":{"type":"object","properties":{"result":{"type":"array","items":{"$ref":"#/definitions/ConfigurationResult«Member,MemberInformation»"}},"statusCode":{"type":"string","enum":["ILLEGAL_ARGUMENT","UNAUTHENTICATED","UNAUTHORIZED","ENTITY_EXISTS","ENTITY_NOT_FOUND","ERROR","FAIL_TO_PERSIST","ACCEPTED","IN_PROGRESS","OK"]},"statusMessage":{"type":"string"},"uri":{"type":"string"}},"title":"ClusterManagementListResult«Member,MemberInformation»"},"ClusterManagementListResult«Region,RuntimeRegionInfo»":{"type":"object","properties":{"result":{"type":"array","items":{"$ref":"#/definitions/ConfigurationResult«Region,RuntimeRegionInfo»"}},"statusCode":{"type":"string","enum":["ILLEGAL_ARGUMENT","UNAUTHENTICATED","UNAUTHORIZED","ENTITY_EXISTS","ENTITY_NOT_FOUND","ERROR","FAIL_TO_PERSIST","ACCEPTED","IN_PROGRESS","OK"]},"statusMessage":{"type":"string"},"uri":{"type":"string"}},"title":"ClusterManagementListResult«Region,RuntimeRegionInfo»"},"ClusterManagementOperationResult«RebalanceResult»":{"type":"object","properties":{"operationEnded":{"type":"string","example":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX"},"operationStart":{"type":"string","example":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX"},"operator":{"type":"string"},"statusCode":{"type":"string","enum":["ILLEGAL_ARGUMENT","UNAUTHENTICATED","UNAUTHORIZED","ENTITY_EXISTS","ENTITY_NOT_FOUND","ERROR","FAIL_TO_PERSIST","ACCEPTED","IN_PROGRESS","OK"]},"statusMessage":{"type":"string"},"uri":{"type":"string"}},"title":"ClusterManagementOperationResult«RebalanceResult»"},"ClusterManagementOperationStatusResult«RebalanceResult»":{"type":"object","properties":{"operationEnded":{"type":"string","example":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX"},"operationStart":{"type":"string","example":"yyyy-MM-dd'T'HH:mm:ss.SSSXXX"},"operator":{"type":"string"},"result":{"$ref":"#/definitions/RebalanceResult"},"statusCode":{"type":"string","enum":["ILLEGAL_ARGUMENT","UNAUTHENTICATED","UNAUTHORIZED","ENTITY_EXISTS","ENTITY_NOT_FOUND","ERROR","FAIL_TO_PERSIST","ACCEPTED","IN_PROGRESS","OK"]},"statusMessage":{"type":"string"},"uri":{"type":"string"}},"title":"ClusterManagementOperationStatusResult«RebalanceResult»"},"ClusterManagementResult":{"type":"object","properties":{"statusCode":{"type":"string","enum":["ILLEGAL_ARGUMENT","UNAUTHENTICATED","UNAUTHORIZED","ENTITY_EXISTS","ENTITY_NOT_FOUND","ERROR","FAIL_TO_PERSIST","ACCEPTED","IN_PROGRESS","OK"]},"statusMessage":{"type":"string"},"uri":{"type":"string"}},"title":"ClusterManagementResult"},"ConfigurationResult«GatewayReceiver,GatewayReceiverInfo»":{"type":"object","properties":{"configuration":{"$ref":"#/definitions/GatewayReceiver"},"runtimeInfo":{"type":"array","items":{"$ref":"#/definitions/GatewayReceiverInfo"}}},"title":"ConfigurationResult«GatewayReceiver,GatewayReceiverInfo»"},"ConfigurationResult«Index,RuntimeInfo»":{"type":"object","properties":{"configuration":{"$ref":"#/definitions/Index"},"runtimeInfo":{"type":"array","items":{"$ref":"#/definitions/RuntimeInfo"}}},"title":"ConfigurationResult«Index,RuntimeInfo»"},"ConfigurationResult«Member,MemberInformation»":{"type":"object","properties":{"configuration":{"$ref":"#/definitions/Member"},"runtimeInfo":{"type":"array","items":{"$ref":"#/definitions/MemberInformation"}}},"title":"ConfigurationResult«Member,MemberInformation»"},"ConfigurationResult«Region,RuntimeRegionInfo»":{"type":"object","properties":{"configuration":{"$ref":"#/definitions/Region"},"runtimeInfo":{"type":"array","items":{"$ref":"#/definitions/RuntimeRegionInfo"}}},"title":"ConfigurationResult«Region,RuntimeRegionInfo»"},"Expiration":{"type":"object","properties":{"action":{"type":"string","enum":["DESTROY","INVALIDATE","LEGACY"]},"timeInSeconds":{"type":"integer","format":"int32"},"type":{"type":"string","enum":["ENTRY_TIME_TO_LIVE","ENTRY_IDLE_TIME","LEGACY"]}},"title":"Expiration"},"GatewayReceiver":{"type":"object","properties":{"endPort":{"type":"integer","format":"int32"},"gatewayTransportFilters":{"type":"array","items":{"$ref":"#/definitions/ClassName"}},"group":{"type":"string"},"manualStart":{"type":"boolean"},"maximumTimeBetweenPings":{"type":"integer","format":"int32"},"socketBufferSize":{"type":"integer","format":"int32"},"startPort":{"type":"integer","format":"int32"},"uri":{"type":"string"}},"title":"GatewayReceiver"},"GatewayReceiverInfo":{"type":"object","properties":{"bindAddress":{"type":"string"},"connectedSenders":{"type":"array","items":{"type":"string"}},"hostnameForSenders":{"type":"string"},"memberName":{"type":"string"},"port":{"type":"integer","format":"int32"},"running":{"type":"boolean"},"senderCount":{"type":"integer","format":"int32"}},"title":"GatewayReceiverInfo"},"Index":{"type":"object","properties":{"expression":{"type":"string"},"group":{"type":"string"},"keyIndex":{"type":"boolean"},"name":{"type":"string"},"regionPath":{"type":"string"},"uri":{"type":"string"}},"title":"Index"},"Member":{"type":"object","properties":{"group":{"type":"string"},"id":{"type":"string"},"uri":{"type":"string"}},"title":"Member"},"MemberInformation":{"type":"object","properties":{"cacheServerInfo":{"type":"array","items":{"$ref":"#/definitions/CacheServerInfo"}},"cacheXmlFilePath":{"type":"string"},"clientCount":{"type":"integer","format":"int32"},"coordinator":{"type":"boolean"},"cpuUsage":{"type":"number","format":"double"},"groups":{"type":"string"},"heapUsage":{"type":"integer","format":"int64"},"host":{"type":"string"},"hostedRegions":{"type":"array","items":{"type":"string"}},"httpServiceBindAddress":{"type":"string"},"httpServicePort":{"type":"integer","format":"int32"},"id":{"type":"string"},"initHeapSize":{"type":"integer","format":"int64"},"locatorPort":{"type":"integer","format":"int32"},"locators":{"type":"string"},"logFilePath":{"type":"string"},"maxHeapSize":{"type":"integer","format":"int64"},"memberName":{"type":"string"},"offHeapMemorySize":{"type":"string"},"processId":{"type":"integer","format":"int32"},"secured":{"type":"boolean"},"server":{"type":"boolean"},"serverBindAddress":{"type":"string"},"statArchiveFilePath":{"type":"string"},"status":{"type":"string"},"webSSL":{"type":"boolean"},"workingDirPath":{"type":"string"}},"title":"MemberInformation"},"Pdx":{"type":"object","properties":{"diskStoreName":{"type":"string"},"ignoreUnreadFields":{"type":"boolean"},"pdxSerializer":{"$ref":"#/definitions/ClassName"},"persistent":{"type":"boolean"},"readSerialized":{"type":"boolean"},"uri":{"type":"string"}},"title":"Pdx"},"RebalanceOperation":{"type":"object","properties":{"excludeRegions":{"type":"array","items":{"type":"string"}},"includeRegions":{"type":"array","items":{"type":"string"}},"simulate":{"type":"boolean"}},"title":"RebalanceOperation"},"RebalanceRegionResult":{"type":"object","properties":{"bucketCreateBytes":{"type":"integer","format":"int64"},"bucketCreateTimeInMilliseconds":{"type":"integer","format":"int64"},"bucketCreatesCompleted":{"type":"integer","format":"int32"},"bucketTransferBytes":{"type":"integer","format":"int64"},"bucketTransferTimeInMilliseconds":{"type":"integer","format":"int64"},"bucketTransfersCompleted":{"type":"integer","format":"int32"},"primaryTransferTimeInMilliseconds":{"type":"integer","format":"int64"},"primaryTransfersCompleted":{"type":"integer","format":"int32"},"regionName":{"type":"string"},"timeInMilliseconds":{"type":"integer","format":"int64"}},"title":"RebalanceRegionResult"},"RebalanceResult":{"type":"object","properties":{"rebalanceRegionResults":{"type":"array","items":{"$ref":"#/definitions/RebalanceRegionResult"}},"statusMessage":{"type":"string"}},"title":"RebalanceResult"},"Region":{"type":"object","properties":{"diskStoreName":{"type":"string"},"expirations":{"type":"array","items":{"$ref":"#/definitions/Expiration"}},"group":{"type":"string"},"keyConstraint":{"type":"string"},"name":{"type":"string"},"redundantCopies":{"type":"integer","format":"int32"},"type":{"type":"string","enum":["PARTITION","PARTITION_PERSISTENT","PARTITION_PROXY","REPLICATE","REPLICATE_PERSISTENT","REPLICATE_PROXY","LEGACY"]},"uri":{"type":"string"},"valueConstraint":{"type":"string"}},"title":"Region"},"RuntimeInfo":{"type":"object","properties":{"memberName":{"type":"string"}},"title":"RuntimeInfo"},"RuntimeRegionInfo":{"type":"object","properties":{"entryCount":{"type":"integer","format":"int64"},"memberName":{"type":"string"}},"title":"RuntimeRegionInfo"}}}`
		})
		It("Builds AvailableEndpoints when swagger data is received", func() {
			requester.ExchangeReturns(fakeResponse, nil)
			err := GetEndPoints(&commandData, requester)
			Expect(err).To(BeNil())
			Expect(len(commandData.AvailableEndpoints)).To(Equal(17))
			Expect(commandData.ConnnectionData.UseToken).To(BeTrue())

			checkRebalance, available := commandData.AvailableEndpoints["check rebalance"]
			Expect(available).To(BeTrue())
			Expect(len(checkRebalance.Parameters)).To(Equal(1))
			Expect(checkRebalance.Parameters[0].Name).To(Equal("id"))
			Expect(checkRebalance.Parameters[0].Required).To(BeTrue())
			Expect(checkRebalance.Parameters[0].BodyDefinition).To(BeEmpty())

			listIndexes, available := commandData.AvailableEndpoints["list indexes"]
			Expect(available).To(BeTrue())
			Expect(len(listIndexes.Parameters)).To(Equal(1))
			Expect(listIndexes.Parameters[0].Name).To(Equal("id"))
			Expect(listIndexes.Parameters[0].Required).To(BeFalse())
			Expect(listIndexes.Parameters[0].BodyDefinition).To(BeEmpty())

			startRebalance, available := commandData.AvailableEndpoints["start rebalance"]
			Expect(available).To(BeTrue())
			Expect(len(startRebalance.Parameters)).To(Equal(1))
			Expect(startRebalance.Parameters[0].Name).To(Equal("operation"))
			Expect(startRebalance.Parameters[0].Required).To(BeTrue())
			Expect(startRebalance.Parameters[0].BodyDefinition).NotTo(BeEmpty())
			Expect(len(startRebalance.Parameters[0].BodyDefinition)).To(Equal(3))

			excludeRegions, available := startRebalance.Parameters[0].BodyDefinition["excludeRegions"]
			Expect(len(excludeRegions.([]string))).To(Equal(2))
			includeRegions, available := startRebalance.Parameters[0].BodyDefinition["includeRegions"]
			Expect(len(includeRegions.([]string))).To(Equal(2))
			simulate, available := startRebalance.Parameters[0].BodyDefinition["simulate"]
			Expect(simulate.(bool)).To(BeTrue())

			createRegion, available := commandData.AvailableEndpoints["create region"]
			Expect(available).To(BeTrue())
			Expect(len(createRegion.Parameters)).To(Equal(1))
			Expect(createRegion.Parameters[0].Name).To(Equal("regionConfig"))
			Expect(createRegion.Parameters[0].Required).To(BeTrue())
			Expect(createRegion.Parameters[0].BodyDefinition).NotTo(BeEmpty())
			Expect(len(createRegion.Parameters[0].BodyDefinition)).To(Equal(9))

			expirations, available := createRegion.Parameters[0].BodyDefinition["expirations"]
			Expect(len(expirations.([]interface{}))).To(Equal(1))
			expiration := expirations.([]interface{})[0]
			Expect(expiration).NotTo(BeNil())
			action := expiration.(map[string]interface{})["action"]
			Expect(action).NotTo(BeNil())
			Expect(action).To(Equal("ENUM, one of: DESTROY, INVALIDATE, LEGACY"))
			expirationType := expiration.(map[string]interface{})["type"]
			Expect(expirationType).NotTo(BeNil())
			Expect(expirationType).To(Equal("ENUM, one of: ENTRY_TIME_TO_LIVE, ENTRY_IDLE_TIME, LEGACY"))
			timeInSeconds := expiration.(map[string]interface{})["timeInSeconds"]
			Expect(timeInSeconds).NotTo(BeNil())
			Expect(timeInSeconds).To(Equal(42))
		})

		It("Returns an error when Exchange call returns an error", func() {
			requester.ExchangeReturns("", errors.New("Failed call"))
			err := GetEndPoints(&commandData, requester)
			Expect(err).NotTo(BeNil())
			Expect(err.Error()).To(Equal("unable to reach /management/experimental/api-docs: Failed call"))
		})

		It("Returns an error when swagger output cannot be parsed", func() {
			requester.ExchangeReturns("", nil)
			err := GetEndPoints(&commandData, requester)
			Expect(err).NotTo(BeNil())
			Expect(err.Error()).To(Equal("invalid response : unexpected end of JSON input"))
		})
	})

})
